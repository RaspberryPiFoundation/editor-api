"""
A file that makes up part of a project
"""
type Component implements Node {
  """
  The contents of the component
  """
  content: String

  """
  The time it was created
  """
  createdAt: ISO8601DateTime!

  """
  True if this is the default component of a project, e.g. main.py, index.html
  """
  default: Boolean!

  """
  The file extension name of the component, e.g. py, html, css, csv
  """
  extension: String!

  """
  ID of the object.
  """
  id: ID!

  """
  The file basename of the component, e.g. main, index, styles
  """
  name: String!

  """
  The project this component belongs to
  """
  project: Project

  """
  The time it was last changed
  """
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Component.
"""
type ComponentConnection {
  """
  A list of edges.
  """
  edges: [ComponentEdge]

  """
  A list of nodes.
  """
  nodes: [Component]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  Total number of nodes available
  """
  totalCount: Int!
}

"""
An edge in a connection.
"""
type ComponentEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Component
}

"""
Represents a project component during a mutation
"""
input ComponentInput {
  """
  The text content of the component
  """
  content: String

  """
  If this is the default component on a project
  """
  default: Boolean!

  """
  The file extension of the component, e.g. html, csv, py
  """
  extension: String!

  """
  The name of the file
  """
  name: String!

  """
  The ID of the project this component should be assocated with
  """
  projectId: ID
}

"""
Autogenerated input type of CreateProject
"""
input CreateProjectInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Any project components
  """
  components: [ComponentInput!]

  """
  The name of the project
  """
  name: String!

  """
  The type of project, e.g. python, html
  """
  projectType: String!
}

"""
Autogenerated return type of CreateProject.
"""
type CreateProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  The project that has been created
  """
  project: Project
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

"""
An image
"""
type Image {
  """
  The time the image was created
  """
  createdAt: ISO8601DateTime!

  """
  The filename of the image
  """
  filename: String!

  """
  The URL where the image can be downloaded from
  """
  url: String
}

"""
The connection type for Image.
"""
type ImageConnection {
  """
  A list of edges.
  """
  edges: [ImageEdge]

  """
  A list of nodes.
  """
  nodes: [Image]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  Total number of nodes available
  """
  totalCount: Int!
}

"""
An edge in a connection.
"""
type ImageEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Image
}

type Mutation {
  """
  A mutation to create a project
  """
  createProject(
    """
    Parameters for CreateProject
    """
    input: CreateProjectInput!
  ): CreateProjectPayload
}

"""
An object with an ID.
"""
interface Node {
  """
  ID of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

"""
A project comprising of a number of components and images
"""
type Project implements Node {
  """
  All components associated with this project
  """
  components(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ComponentConnection

  """
  The created at timestamp
  """
  createdAt: ISO8601DateTime!

  """
  ID of the object.
  """
  id: ID!

  """
  The easy-to-rememeber identifier of the project
  """
  identifier: String!

  """
  All images associated with this project
  """
  images(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ImageConnection

  """
  The name of the project
  """
  name: String

  """
  The type of project, e.g. python, html
  """
  projectType: String!

  """
  If present, the project this one was remixed from
  """
  remixedFrom: Project

  """
  The last updated timestamp
  """
  updatedAt: ISO8601DateTime!

  """
  The project creator's user ID
  """
  userId: Uuid
}

"""
The connection type for Project.
"""
type ProjectConnection {
  """
  A list of edges.
  """
  edges: [ProjectEdge]

  """
  A list of nodes.
  """
  nodes: [Project]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  Total number of nodes available
  """
  totalCount: Int!
}

"""
An edge in a connection.
"""
type ProjectEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Project
}

type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node

  """
  Fetches a list of objects given a list of IDs.
  """
  nodes(
    """
    IDs of the objects.
    """
    ids: [ID!]!
  ): [Node]!

  """
  Find a project by identifier
  """
  project(
    """
    Project identifier
    """
    identifier: String!
  ): Project

  """
  All viewable projects
  """
  projects(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filter by user ID
    """
    userId: String
  ): ProjectConnection
}

"""
A globally unique ID
"""
scalar Uuid
