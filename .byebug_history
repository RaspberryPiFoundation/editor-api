c
project_hash
exit
pp project_hash
pp e
n
s
q
params.deep_symbolize_keys
params.to_h.deep_symbolize_keys
params.to_h.class
params.to_h.calss
params.to_h.deep_transform_keys(&:to_sym)
params.to_h
params
q
continue
q
continue
pp params
continue
params
continue
pp params
n
q
project
n
s
q
x.deep_transform_keys(&:to_sym)
x={"type"=>"python", "components"=>[{"name"=>"main", "extension"=>"py", "content"=>"print(\"hello world\")", "index"=>0, "default"=>true}]}
x.deep_transform_keys(&:to_sym)
x
x = params.to_h.dup
params.to_h
params
hashed_params.deep_transform_keys!(&:to_sym)
hashed_params.deep_transform_keys(&:to_sym)
hashed_params
hashed_params = params.to_h
params.to_h.dup.deep_transform_keys(&:to_sym)
params.to_h
params.to_h.deep_transform_keys(&:to_sym)
{"type"=>"python", "components"=>[{"name"=>"main", "extension"=>"py", "content"=>"print(\"hello world\")", "index"=>0, "default"=>true}]}.deep_transform_keys(&:to_sym)
{"type"=>"python", "components"=>[{"name"=>"main", "extension"=>"py", "content"=>"print(\"hello world\")", "index"=>0, "default"=>true}]}.deep_transform_params(&:to_sym)
dupped_params.deep_transform_keys do |key|
              key.to_sym
            rescue StandardError
              key
            end
dupped_params = params.dup
dupped_params_hash.deep_transform_keys do |key|
              key.to_sym
            rescue StandardError
              key
            end
dupped_params_hash = params_hash.dup
params_hash.dup.deep_transform_keys do |key|
              key.to_sym
            rescue StandardError
              key
            end
params_hash.deep_transform_keys do |key|
              key.to_sym
            rescue StandardError
              key
            end
params_hash = params.to_h
params
project
n
s
q
params.dup.deep_transform_keys do |key|
              key.to_sym
            rescue StandardError
              key
            end
params
project
n
q
params.to_h.deep_transform_keys do |key|
              key.to_sym
            rescue StandardError
              key
            end
dupped_params.to_h.deep_transform_keys do |key|
              key.to_sym
            rescue StandardError
              key
            end
dupped_params.deep_transform_keys do |key|
dupped_params = params.to_h.dup
params
params.to_h
params.deep_symbolize_keys
q
continue
params.to_h!
params
params.keys.each do |key|
  params[(key.to_sym rescue key) || key] = params.delete(key)
end
require 'rails'
params.hash_with_indifferent_access
require 'rails'
params.to_h.deep_transform_keys(&:to_sym)
params.to_h.deep_transform_keys!(&:to_sym)
params.to_h.deep_transform_keys(&:to_sym)
params.to_h
params
c
s
params
continue
params
continue
params
